{"version":3,"sources":["components/LocationSection/index.js","components/NavigationButton/index.js","components/ValueLabel/index.js","components/TimeSlider/index.js","dummyWeatherData.js","components/Forecast/index.js","components/Recommendations/index.js","components/Home/index.js","components/About/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","LocationSection","classes","className","noValidate","autoComplete","TextField","id","label","variant","defaultValue","type","helperText","inputProps","inputMode","autoFocus","required","StyledButton","styled","Button","NavigationButton","route","history","useHistory","color","onClick","push","ValueLabel","children","open","value","Tooltip","enterTouchDelay","placement","title","height","formatter","getReadableTime","timeInMs","useShortFormat","formatMode","moment","format","localStartOfCurrentHourMs","startOf","valueOf","localStartOfOneDayFromNowMs","add","localStartOfNextDayMs","localStartOfNextHourMs","localStartOfTwelveHoursFromNowMs","formatValueLabel","val","CustomizedSlider","withStyles","marginTop","marginBottom","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","TimeSlider","React","useState","setValue","Typography","gutterBottom","onChange","event","newValue","step","valueLabelDisplay","min","max","valueLabelFormat","ValueLabelComponent","dummyData","Forecast","useEffect","a","async","openWeatherData","allForecasts","_","get","startTime","utc","stopTime","firstAfterStartTime","find","f","dt_txt","isAfter","firstAfterStartIndex","indexOf","startIndex","firstAfterEndTime","firstAfterStopIndex","stopIndex","forecastsToConsider","filter","console","log","feelsLikeTemps","map","main","feels_like","minFeelsLikeKelvin","Math","minFeelsLikeFarenheit","Recommendations","Title","h1","Home","style","display","justifyContent","alignItems","h2","About","href","target","rel","App","Container","maxWidth","exact","path","component","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82f4470c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nconst LocationSection = () => {\n  const classes = useStyles();\n  return (\n    <section>\n      <div>\n        <div>Where will you be today?</div>\n      </div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"zip-input\"\n          label=\"Zip Code\"\n          variant=\"outlined\"\n          defaultValue=\"10011\"\n          type=\"string\"\n          helperText=\"Please enter a valid US zip code\"\n          inputProps={{\n            inputMode: \"numeric\",\n            autoComplete: \"postal-code\",\n            autoFocus: \"{true}\",\n            required: \"{true}\"\n          }}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default LocationSection;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled(Button)`\n  background: linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%);\n  border-radius: 3px;\n  border: 0;\n  color: white;\n  height: 48px;\n  padding: 0 30px;\n  box-shadow: 0 3px 5px 2px rgba(255, 105, 135, 0.3);\n`;\n\nconst NavigationButton = ({ route, label }) => {\n  const history = useHistory();\n  const handleClick = () => history.push(route);\n\n  return (\n    <StyledButton variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n      {label}\n    </StyledButton>\n  );\n};\n\nexport default NavigationButton;\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst ValueLabel = ({ children, open, value }) => (\n  <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n    {children}\n  </Tooltip>\n);\n\nValueLabel.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default ValueLabel;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Slider } from \"@material-ui/core\";\nimport moment from \"moment-timezone\";\nimport ValueLabel from \"../ValueLabel\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2\n  },\n  margin: {\n    height: theme.spacing(3)\n  }\n}));\n\nconst formatter = {\n  short: \"LT\",\n  long: \" h:mm A, MMM D\"\n};\n\nconst oneHour = 1000 * 60 * 60;\nconst getReadableTime = (timeInMs, useShortFormat) => {\n  const formatMode = useShortFormat ? formatter.short : formatter.long;\n  return moment(timeInMs).format(formatMode);\n};\n\n// Slider Range\nconst localStartOfCurrentHourMoment = moment().startOf(\"hour\");\nconst localStartOfCurrentHourMs = localStartOfCurrentHourMoment.valueOf();\nconst localStartOfCurrentHourReadable = getReadableTime(\n  localStartOfCurrentHourMs,\n  false\n);\n\nconst localStartOfOneDayFromNowMoment = moment()\n  .add(1, \"day\")\n  .startOf(\"hour\");\nconst localStartOfOneDayFromNowMs = localStartOfOneDayFromNowMoment.valueOf();\nconst localStartOfOneDayFromNowReadable = getReadableTime(\n  localStartOfOneDayFromNowMs,\n  false\n);\n\nconst localStartOfNextDayMoment = moment()\n  .add(1, \"day\")\n  .startOf(\"day\");\nconst localStartOfNextDayMs = localStartOfNextDayMoment.valueOf();\nconst localStartOfNextDayReadable = getReadableTime(\n  localStartOfNextDayMs,\n  false\n);\n\n// Slider Defaults\nconst localStartOfNextHourMoment = moment()\n  .add(1, \"hour\")\n  .startOf(\"hour\");\nconst localStartOfNextHourMs = localStartOfNextHourMoment.valueOf();\n\nconst localStartOfTwelveHoursFromNowMoment = moment()\n  .add(12, \"hours\")\n  .startOf(\"hour\");\nconst localStartOfTwelveHoursFromNowMs = localStartOfTwelveHoursFromNowMoment.valueOf();\n\n// console.log(value); // this is an array with two elements: the upper and lower limit ... [9, 23]\n// On initial load and when new values are set, want to kick off the API call that gets forecast for these times\n// I should restrict it so that the lower limit can never be earlier than this hour\n// If it's now 8:30am I can set lower limit to 8am but not 7am\n// Figure out a way to translate moment time into these values\n\n// Start with this naively being 12am to 12 am, as 24 hours\n// Gotta make these dynamically created ... from currentHoursFromStartOfToday to upper limit\n// Maybe use rc-slider instead if I can't get the lower limit to be restricted more than what appear on the slider itself\n\nconst formatValueLabel = val => {\n  return getReadableTime(val, true);\n};\n\nconst CustomizedSlider = withStyles({\n  root: {\n    //color: \"#52af77\",\n    height: 8,\n    marginTop: 40,\n    marginBottom: 20\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -6,\n    marginLeft: -9,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst TimeSlider = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState([\n    localStartOfNextHourMs,\n    localStartOfTwelveHoursFromNowMs\n  ]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        When are you venturing out?\n      </Typography>\n      <CustomizedSlider\n        value={value}\n        onChange={handleChange}\n        step={oneHour}\n        valueLabelDisplay=\"on\"\n        min={localStartOfCurrentHourMs}\n        max={localStartOfOneDayFromNowMs}\n        valueLabelFormat={formatValueLabel}\n        ValueLabelComponent={ValueLabel}\n      />\n      <div>Leaving Home: {getReadableTime(value[0], false)}</div>\n      <div>Returning: {getReadableTime(value[1], false)}</div>\n    </div>\n  );\n};\n\nexport default TimeSlider;\n","// Note: For Dev purposes, replace with more current example once this is outdated\n// TODO: test what happens when all this is expired\n\nconst dummyData = {\n  \"cod\": \"200\",\n  \"message\": 0,\n  \"cnt\": 40,\n  \"list\": [\n    {\n      \"dt\": 1579564800,\n      \"main\": {\n        \"temp\": 270.54,\n        \"feels_like\": 261.94,\n        \"temp_min\": 270.54,\n        \"temp_max\": 271.54,\n        \"pressure\": 1028,\n        \"sea_level\": 1028,\n        \"grnd_level\": 1027,\n        \"humidity\": 51,\n        \"temp_kf\": -1\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 7.79,\n        \"deg\": 332\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-21 00:00:00\"\n    },\n    {\n      \"dt\": 1579575600,\n      \"main\": {\n        \"temp\": 269.59,\n        \"feels_like\": 260.88,\n        \"temp_min\": 269.59,\n        \"temp_max\": 270.34,\n        \"pressure\": 1028,\n        \"sea_level\": 1028,\n        \"grnd_level\": 1028,\n        \"humidity\": 57,\n        \"temp_kf\": -0.75\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 7.99,\n        \"deg\": 338\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-21 03:00:00\"\n    },\n    {\n      \"dt\": 1579586400,\n      \"main\": {\n        \"temp\": 269.31,\n        \"feels_like\": 261.51,\n        \"temp_min\": 269.31,\n        \"temp_max\": 269.81,\n        \"pressure\": 1028,\n        \"sea_level\": 1028,\n        \"grnd_level\": 1028,\n        \"humidity\": 57,\n        \"temp_kf\": -0.5\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 6.66,\n        \"deg\": 341\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-21 06:00:00\"\n    },\n    {\n      \"dt\": 1579597200,\n      \"main\": {\n        \"temp\": 269.64,\n        \"feels_like\": 262.7,\n        \"temp_min\": 269.64,\n        \"temp_max\": 269.89,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1028,\n        \"humidity\": 56,\n        \"temp_kf\": -0.25\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 5.45,\n        \"deg\": 346\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-21 09:00:00\"\n    },\n    {\n      \"dt\": 1579608000,\n      \"main\": {\n        \"temp\": 269.65,\n        \"feels_like\": 263.45,\n        \"temp_min\": 269.65,\n        \"temp_max\": 269.65,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1029,\n        \"humidity\": 54,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 4.34,\n        \"deg\": 346\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-21 12:00:00\"\n    },\n    {\n      \"dt\": 1579618800,\n      \"main\": {\n        \"temp\": 269.98,\n        \"feels_like\": 263.34,\n        \"temp_min\": 269.98,\n        \"temp_max\": 269.98,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 57,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 5.07,\n        \"deg\": 332\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-21 15:00:00\"\n    },\n    {\n      \"dt\": 1579629600,\n      \"main\": {\n        \"temp\": 271.67,\n        \"feels_like\": 265.36,\n        \"temp_min\": 271.67,\n        \"temp_max\": 271.67,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1029,\n        \"humidity\": 44,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 4.43,\n        \"deg\": 329\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-21 18:00:00\"\n    },\n    {\n      \"dt\": 1579640400,\n      \"main\": {\n        \"temp\": 273.05,\n        \"feels_like\": 266.61,\n        \"temp_min\": 273.05,\n        \"temp_max\": 273.05,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1028,\n        \"humidity\": 42,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 4.69,\n        \"deg\": 347\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-21 21:00:00\"\n    },\n    {\n      \"dt\": 1579651200,\n      \"main\": {\n        \"temp\": 273.69,\n        \"feels_like\": 266.06,\n        \"temp_min\": 273.69,\n        \"temp_max\": 273.69,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 48,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 6.62,\n        \"deg\": 336\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-22 00:00:00\"\n    },\n    {\n      \"dt\": 1579662000,\n      \"main\": {\n        \"temp\": 272.77,\n        \"feels_like\": 265.66,\n        \"temp_min\": 272.77,\n        \"temp_max\": 272.77,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 59,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 90\n      },\n      \"wind\": {\n        \"speed\": 6.09,\n        \"deg\": 337\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-22 03:00:00\"\n    },\n    {\n      \"dt\": 1579672800,\n      \"main\": {\n        \"temp\": 272.96,\n        \"feels_like\": 265.64,\n        \"temp_min\": 272.96,\n        \"temp_max\": 272.96,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1029,\n        \"humidity\": 61,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 803,\n          \"main\": \"Clouds\",\n          \"description\": \"broken clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 56\n      },\n      \"wind\": {\n        \"speed\": 6.48,\n        \"deg\": 346\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-22 06:00:00\"\n    },\n    {\n      \"dt\": 1579683600,\n      \"main\": {\n        \"temp\": 272.68,\n        \"feels_like\": 265.74,\n        \"temp_min\": 272.68,\n        \"temp_max\": 272.68,\n        \"pressure\": 1028,\n        \"sea_level\": 1028,\n        \"grnd_level\": 1028,\n        \"humidity\": 62,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 5.93,\n        \"deg\": 337\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-22 09:00:00\"\n    },\n    {\n      \"dt\": 1579694400,\n      \"main\": {\n        \"temp\": 272,\n        \"feels_like\": 266.6,\n        \"temp_min\": 272,\n        \"temp_max\": 272,\n        \"pressure\": 1031,\n        \"sea_level\": 1031,\n        \"grnd_level\": 1030,\n        \"humidity\": 62,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 3.64,\n        \"deg\": 357\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-22 12:00:00\"\n    },\n    {\n      \"dt\": 1579705200,\n      \"main\": {\n        \"temp\": 272.12,\n        \"feels_like\": 267.81,\n        \"temp_min\": 272.12,\n        \"temp_max\": 272.12,\n        \"pressure\": 1031,\n        \"sea_level\": 1031,\n        \"grnd_level\": 1031,\n        \"humidity\": 60,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 2.05,\n        \"deg\": 8\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-22 15:00:00\"\n    },\n    {\n      \"dt\": 1579716000,\n      \"main\": {\n        \"temp\": 272.69,\n        \"feels_like\": 269.25,\n        \"temp_min\": 272.69,\n        \"temp_max\": 272.69,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 59,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 0.84,\n        \"deg\": 283\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-22 18:00:00\"\n    },\n    {\n      \"dt\": 1579726800,\n      \"main\": {\n        \"temp\": 273.59,\n        \"feels_like\": 269.65,\n        \"temp_min\": 273.59,\n        \"temp_max\": 273.59,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1029,\n        \"humidity\": 52,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 1.46,\n        \"deg\": 22\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-22 21:00:00\"\n    },\n    {\n      \"dt\": 1579737600,\n      \"main\": {\n        \"temp\": 274.71,\n        \"feels_like\": 270.82,\n        \"temp_min\": 274.71,\n        \"temp_max\": 274.71,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 47,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 1.35,\n        \"deg\": 35\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-23 00:00:00\"\n    },\n    {\n      \"dt\": 1579748400,\n      \"main\": {\n        \"temp\": 275.08,\n        \"feels_like\": 270.86,\n        \"temp_min\": 275.08,\n        \"temp_max\": 275.08,\n        \"pressure\": 1030,\n        \"sea_level\": 1030,\n        \"grnd_level\": 1030,\n        \"humidity\": 46,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 1.83,\n        \"deg\": 49\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-23 03:00:00\"\n    },\n    {\n      \"dt\": 1579759200,\n      \"main\": {\n        \"temp\": 275.39,\n        \"feels_like\": 271.73,\n        \"temp_min\": 275.39,\n        \"temp_max\": 275.39,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1029,\n        \"humidity\": 47,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"clear sky\",\n          \"icon\": \"01n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 6\n      },\n      \"wind\": {\n        \"speed\": 1.1,\n        \"deg\": 41\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-23 06:00:00\"\n    },\n    {\n      \"dt\": 1579770000,\n      \"main\": {\n        \"temp\": 275.09,\n        \"feels_like\": 270.88,\n        \"temp_min\": 275.09,\n        \"temp_max\": 275.09,\n        \"pressure\": 1028,\n        \"sea_level\": 1028,\n        \"grnd_level\": 1028,\n        \"humidity\": 50,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 803,\n          \"main\": \"Clouds\",\n          \"description\": \"broken clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 73\n      },\n      \"wind\": {\n        \"speed\": 1.96,\n        \"deg\": 349\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-23 09:00:00\"\n    },\n    {\n      \"dt\": 1579780800,\n      \"main\": {\n        \"temp\": 274.78,\n        \"feels_like\": 271.18,\n        \"temp_min\": 274.78,\n        \"temp_max\": 274.78,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1029,\n        \"humidity\": 51,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 86\n      },\n      \"wind\": {\n        \"speed\": 1.08,\n        \"deg\": 14\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-23 12:00:00\"\n    },\n    {\n      \"dt\": 1579791600,\n      \"main\": {\n        \"temp\": 275.27,\n        \"feels_like\": 271.45,\n        \"temp_min\": 275.27,\n        \"temp_max\": 275.27,\n        \"pressure\": 1029,\n        \"sea_level\": 1029,\n        \"grnd_level\": 1029,\n        \"humidity\": 52,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 802,\n          \"main\": \"Clouds\",\n          \"description\": \"scattered clouds\",\n          \"icon\": \"03d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 41\n      },\n      \"wind\": {\n        \"speed\": 1.48,\n        \"deg\": 328\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-23 15:00:00\"\n    },\n    {\n      \"dt\": 1579802400,\n      \"main\": {\n        \"temp\": 276,\n        \"feels_like\": 272.3,\n        \"temp_min\": 276,\n        \"temp_max\": 276,\n        \"pressure\": 1027,\n        \"sea_level\": 1027,\n        \"grnd_level\": 1027,\n        \"humidity\": 53,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 803,\n          \"main\": \"Clouds\",\n          \"description\": \"broken clouds\",\n          \"icon\": \"04d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 54\n      },\n      \"wind\": {\n        \"speed\": 1.44,\n        \"deg\": 303\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-23 18:00:00\"\n    },\n    {\n      \"dt\": 1579813200,\n      \"main\": {\n        \"temp\": 276.68,\n        \"feels_like\": 273.47,\n        \"temp_min\": 276.68,\n        \"temp_max\": 276.68,\n        \"pressure\": 1026,\n        \"sea_level\": 1026,\n        \"grnd_level\": 1026,\n        \"humidity\": 49,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 802,\n          \"main\": \"Clouds\",\n          \"description\": \"scattered clouds\",\n          \"icon\": \"03d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 49\n      },\n      \"wind\": {\n        \"speed\": 0.69,\n        \"deg\": 224\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-23 21:00:00\"\n    },\n    {\n      \"dt\": 1579824000,\n      \"main\": {\n        \"temp\": 277.35,\n        \"feels_like\": 273.5,\n        \"temp_min\": 277.35,\n        \"temp_max\": 277.35,\n        \"pressure\": 1026,\n        \"sea_level\": 1026,\n        \"grnd_level\": 1026,\n        \"humidity\": 53,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 803,\n          \"main\": \"Clouds\",\n          \"description\": \"broken clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 74\n      },\n      \"wind\": {\n        \"speed\": 1.85,\n        \"deg\": 221\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-24 00:00:00\"\n    },\n    {\n      \"dt\": 1579834800,\n      \"main\": {\n        \"temp\": 276.74,\n        \"feels_like\": 272.61,\n        \"temp_min\": 276.74,\n        \"temp_max\": 276.74,\n        \"pressure\": 1026,\n        \"sea_level\": 1026,\n        \"grnd_level\": 1025,\n        \"humidity\": 58,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 2.34,\n        \"deg\": 243\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-24 03:00:00\"\n    },\n    {\n      \"dt\": 1579845600,\n      \"main\": {\n        \"temp\": 276.39,\n        \"feels_like\": 270.88,\n        \"temp_min\": 276.39,\n        \"temp_max\": 276.39,\n        \"pressure\": 1024,\n        \"sea_level\": 1024,\n        \"grnd_level\": 1024,\n        \"humidity\": 61,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 4.37,\n        \"deg\": 262\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-24 06:00:00\"\n    },\n    {\n      \"dt\": 1579856400,\n      \"main\": {\n        \"temp\": 276.12,\n        \"feels_like\": 271.28,\n        \"temp_min\": 276.12,\n        \"temp_max\": 276.12,\n        \"pressure\": 1023,\n        \"sea_level\": 1023,\n        \"grnd_level\": 1023,\n        \"humidity\": 58,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 3.26,\n        \"deg\": 292\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-24 09:00:00\"\n    },\n    {\n      \"dt\": 1579867200,\n      \"main\": {\n        \"temp\": 276.14,\n        \"feels_like\": 271.77,\n        \"temp_min\": 276.14,\n        \"temp_max\": 276.14,\n        \"pressure\": 1023,\n        \"sea_level\": 1023,\n        \"grnd_level\": 1023,\n        \"humidity\": 52,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 99\n      },\n      \"wind\": {\n        \"speed\": 2.39,\n        \"deg\": 325\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-24 12:00:00\"\n    },\n    {\n      \"dt\": 1579878000,\n      \"main\": {\n        \"temp\": 276.4,\n        \"feels_like\": 271.67,\n        \"temp_min\": 276.4,\n        \"temp_max\": 276.4,\n        \"pressure\": 1024,\n        \"sea_level\": 1024,\n        \"grnd_level\": 1023,\n        \"humidity\": 55,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 3.04,\n        \"deg\": 11\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-24 15:00:00\"\n    },\n    {\n      \"dt\": 1579888800,\n      \"main\": {\n        \"temp\": 277.01,\n        \"feels_like\": 273.62,\n        \"temp_min\": 277.01,\n        \"temp_max\": 277.01,\n        \"pressure\": 1022,\n        \"sea_level\": 1022,\n        \"grnd_level\": 1022,\n        \"humidity\": 54,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 1.18,\n        \"deg\": 0\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-24 18:00:00\"\n    },\n    {\n      \"dt\": 1579899600,\n      \"main\": {\n        \"temp\": 277.88,\n        \"feels_like\": 274.37,\n        \"temp_min\": 277.88,\n        \"temp_max\": 277.88,\n        \"pressure\": 1022,\n        \"sea_level\": 1022,\n        \"grnd_level\": 1022,\n        \"humidity\": 50,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 1.32,\n        \"deg\": 8\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-24 21:00:00\"\n    },\n    {\n      \"dt\": 1579910400,\n      \"main\": {\n        \"temp\": 278.33,\n        \"feels_like\": 273.48,\n        \"temp_min\": 278.33,\n        \"temp_max\": 278.33,\n        \"pressure\": 1021,\n        \"sea_level\": 1021,\n        \"grnd_level\": 1021,\n        \"humidity\": 56,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 3.55,\n        \"deg\": 46\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-25 00:00:00\"\n    },\n    {\n      \"dt\": 1579921200,\n      \"main\": {\n        \"temp\": 277.86,\n        \"feels_like\": 271.84,\n        \"temp_min\": 277.86,\n        \"temp_max\": 277.86,\n        \"pressure\": 1021,\n        \"sea_level\": 1021,\n        \"grnd_level\": 1021,\n        \"humidity\": 63,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 5.42,\n        \"deg\": 73\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-25 03:00:00\"\n    },\n    {\n      \"dt\": 1579932000,\n      \"main\": {\n        \"temp\": 278,\n        \"feels_like\": 272.07,\n        \"temp_min\": 278,\n        \"temp_max\": 278,\n        \"pressure\": 1021,\n        \"sea_level\": 1021,\n        \"grnd_level\": 1020,\n        \"humidity\": 73,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 98\n      },\n      \"wind\": {\n        \"speed\": 5.72,\n        \"deg\": 72\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-25 06:00:00\"\n    },\n    {\n      \"dt\": 1579942800,\n      \"main\": {\n        \"temp\": 276.93,\n        \"feels_like\": 269.93,\n        \"temp_min\": 276.93,\n        \"temp_max\": 276.93,\n        \"pressure\": 1019,\n        \"sea_level\": 1019,\n        \"grnd_level\": 1019,\n        \"humidity\": 88,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 804,\n          \"main\": \"Clouds\",\n          \"description\": \"overcast clouds\",\n          \"icon\": \"04n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 99\n      },\n      \"wind\": {\n        \"speed\": 7.6,\n        \"deg\": 60\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-25 09:00:00\"\n    },\n    {\n      \"dt\": 1579953600,\n      \"main\": {\n        \"temp\": 276.9,\n        \"feels_like\": 269.27,\n        \"temp_min\": 276.9,\n        \"temp_max\": 276.9,\n        \"pressure\": 1017,\n        \"sea_level\": 1017,\n        \"grnd_level\": 1017,\n        \"humidity\": 89,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"light rain\",\n          \"icon\": \"10n\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 99\n      },\n      \"wind\": {\n        \"speed\": 8.54,\n        \"deg\": 69\n      },\n      \"rain\": {\n        \"3h\": 0.19\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2020-01-25 12:00:00\"\n    },\n    {\n      \"dt\": 1579964400,\n      \"main\": {\n        \"temp\": 278.04,\n        \"feels_like\": 268.29,\n        \"temp_min\": 278.04,\n        \"temp_max\": 278.04,\n        \"pressure\": 1017,\n        \"sea_level\": 1017,\n        \"grnd_level\": 1016,\n        \"humidity\": 90,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"light rain\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 11.89,\n        \"deg\": 79\n      },\n      \"rain\": {\n        \"3h\": 1.94\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-25 15:00:00\"\n    },\n    {\n      \"dt\": 1579975200,\n      \"main\": {\n        \"temp\": 278.5,\n        \"feels_like\": 266.85,\n        \"temp_min\": 278.5,\n        \"temp_max\": 278.5,\n        \"pressure\": 1012,\n        \"sea_level\": 1012,\n        \"grnd_level\": 1012,\n        \"humidity\": 87,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"light rain\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 14.59,\n        \"deg\": 85\n      },\n      \"rain\": {\n        \"3h\": 1.62\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-25 18:00:00\"\n    },\n    {\n      \"dt\": 1579986000,\n      \"main\": {\n        \"temp\": 278.63,\n        \"feels_like\": 266.1,\n        \"temp_min\": 278.63,\n        \"temp_max\": 278.63,\n        \"pressure\": 1008,\n        \"sea_level\": 1008,\n        \"grnd_level\": 1008,\n        \"humidity\": 88,\n        \"temp_kf\": 0\n      },\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"light rain\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": {\n        \"all\": 100\n      },\n      \"wind\": {\n        \"speed\": 15.93,\n        \"deg\": 82\n      },\n      \"rain\": {\n        \"3h\": 2.25\n      },\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2020-01-25 21:00:00\"\n    }\n  ],\n  \"city\": {\n    \"name\": \"Brooklyn\",\n    \"coord\": {\n      \"lat\": 40.6251,\n      \"lon\": -74.0303\n    },\n    \"country\": \"US\",\n    \"timezone\": -18000,\n    \"sunrise\": 1579522529,\n    \"sunset\": 1579557489\n  }\n};\n\nexport default dummyData;","import React from \"react\";\nimport moment from \"moment-timezone\";\nimport TimeSlider from \"../TimeSlider\";\nimport _ from \"lodash\";\nimport dummyData from \"../../dummyWeatherData\";\n\n// TODO: build for what happens if hit too many api calls per unit time\n// TODO: use local storage as cache so don't need to hit api again for every update\n// TODO: shout out to api provider in app\n// TODO: determine best way to handle api key / cors stuff in prod\n// TODO: set up the whole thing in vscode\nconst convertKelvinToFarenheit = kelvinTemp =>\n  ((kelvinTemp - 273.15) * 9) / 5 + 32;\n\nconst Forecast = () => {\n  const fetchWeatherData = async () => {\n    const openWeatherApiKey = process.env.OPEN_WEATHER_KEY;\n    const zip = \"11209\";\n    const openWeatherUrl = `https://api.openweathermap.org/data/2.5/forecast?zip=${zip},us&appid=${openWeatherApiKey}`;\n    const response = await fetch(openWeatherUrl);\n    const json = await response.json();\n    return json;\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      // REAL\n      //const openWeatherData = await fetchWeatherData();\n\n      //DUMMY\n      const openWeatherData = dummyData;\n\n      const allForecasts = _.get(openWeatherData, \"list\", []);\n\n      // TODO: change to get real start time from user input\n      // Which would be like: User says when to start and stop today.\n      // To them it looks like what hour of the day but behind the scenes\n      // it's how long from now. Those how long from nows are what's added\n      // via moment to get start and stop times.\n\n      const startTime = moment.utc().add(2, \"hours\");\n      // TODO: change to get real stop time form user input\n      const stopTime = moment.utc().add(16, \"hours\");\n      // TODO: now have to get all forecast objects that are covered by the on time\n\n      // First Forecast\n      const firstAfterStartTime = allForecasts.find(f =>\n        moment.utc(f.dt_txt).isAfter(startTime)\n      );\n      const firstAfterStartIndex = allForecasts.indexOf(firstAfterStartTime);\n      const startIndex = firstAfterStartIndex - 1;\n      const firstForecastToScan = allForecasts[startIndex];\n      //console.log(firstForecastToScan);\n\n      // Last Forecast\n      const firstAfterEndTime = allForecasts.find(f =>\n        moment.utc(f.dt_txt).isAfter(stopTime)\n      );\n      const firstAfterStopIndex = allForecasts.indexOf(firstAfterEndTime);\n      const stopIndex = firstAfterStopIndex - 1;\n      const lastForecastToScan = allForecasts[stopIndex];\n      //console.log(lastForecastToScan);\n\n      // Forecasts to Heed\n      const forecastsToConsider = allForecasts.filter(\n        f =>\n          allForecasts.indexOf(f) >= startIndex &&\n          allForecasts.indexOf(f) <= stopIndex\n      );\n      console.log(forecastsToConsider);\n\n      const feelsLikeTemps = forecastsToConsider.map(f => f.main.feels_like);\n      console.log(feelsLikeTemps);\n\n      const minFeelsLikeKelvin = Math.min(...feelsLikeTemps);\n      const minFeelsLikeFarenheit = convertKelvinToFarenheit(\n        minFeelsLikeKelvin\n      );\n      console.log(minFeelsLikeFarenheit);\n\n      const coatMaxFarenheit = 40;\n      const jacketMaxFarenheit = 65;\n\n      if (minFeelsLikeFarenheit < coatMaxFarenheit) {\n        const outerwearMessage = \"Wear a winter coat!\";\n        // TODO: figure out how to get this to show\n      }\n\n      // TODO: Now scan through all forecast objects from first through last,\n      // finding the min temp and the max chance of precipitation\n      // (does it depend what kind?)\n\n      // Gotta go UTC cuz that's how it is in API data\n      //console.log(startTime.format());\n      //console.log(moment.utc(firstAfterStartTime.dt_txt).format());\n    })();\n  }, []);\n\n  return <div>Test</div>;\n};\n\nexport default Forecast;\n","import React from \"react\";\n\nconst rainMessage = \"Looks like it's gonna rain! Bring an umbrella.\";\nconst shouldShowRainMessage = true;\n\nconst jacketMessage = \"It's chilly outside. Wear a jacket.\";\nconst shouldShowJacketMessage = false;\n\nconst coatMessage = \"It's cold outside. Wear a coat.\";\nconst shouldShowCoatMessage = true;\n\nconst Recommendations = () => (\n  <div>\n    Here's how to be prepared ...\n    {shouldShowRainMessage ? <div>{rainMessage}</div> : null}\n    {shouldShowJacketMessage ? <div>{jacketMessage}</div> : null}\n    {shouldShowCoatMessage ? <div>{coatMessage}</div> : null}\n  </div>\n);\n\nexport default Recommendations;\n","import React from \"react\";\nimport LocationSection from \"../LocationSection\";\nimport NavigationButton from \"../NavigationButton\";\nimport Forecast from \"../Forecast\";\nimport TimeSlider from \"../TimeSlider\";\nimport styled from \"styled-components\";\nimport Recommendations from \"../Recommendations\";\n\nconst Title = styled.h1`\n  color: palevioletred;\n`;\n\nconst Home = () => (\n  <div className=\"App\">\n    <NavigationButton route=\"/about\" label=\"about\" />\n    <Title>Weather or Not</Title>\n    <Forecast />\n    <LocationSection />\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <TimeSlider />\n    </div>\n    <Recommendations />\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\nimport NavigationButton from \"../NavigationButton\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h2`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst About = () => (\n  <div className=\"App\">\n    <NavigationButton route=\"/\" label=\"home\" />\n    <Title>This site is under construction ...</Title>\n    <p>\n      This site is powered by{\" \"}\n      <a\n        className={\"prettyLink\"}\n        href={\"https://openweathermap.org/\"}\n        target={\"_blank\"}\n        rel={\"noopenner noreferrer\"}\n      >\n        OpenWeatherMap\n      </a>\n      .\n    </p>\n    <p>\n      I'm Thea. I believe many of life's problems are solved by dressing for the\n      weather.\n    </p>\n    <p>\n      Many thanks to Thomas Nickels for leading the General Assembly React\n      Development course for which this app is my final project. And to my\n      fellow classmates. It's been awesome!\n    </p>\n    <p>\n      If you have questions, want to provide feedback, or feel like a chat I'm\n      at theakalise@gmail.com.\n    </p>\n  </div>\n);\n\nexport default About;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\n\nimport \"../../styles.css\";\nimport Home from \"../Home\";\nimport About from \"../About\";\n\nconst App = () => (\n  <Router>\n    <Container maxWidth=\"sm\">\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/about\" component={About} />\n    </Container>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}